<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http use-expressions="true">
		<intercept-url pattern="/" access="hasRole('ROLE_USER') or hasRole('ROLE_ANONYMOUS') or hasRole('ROLE_LIBRARIAN')" />
                
                <intercept-url pattern="/books" access="hasRole('ROLE_ANONYMOUS')" />
		<intercept-url pattern="/books*" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login" default-target-url="/"
			authentication-failure-url="/login?fail=true" />
		<logout logout-url="/logout" logout-success-url="/index" />
		
		<anonymous username="guest" granted-authority="ROLE_ANONYMOUS" />
		<remember-me />
	</http>

        <global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/> 
       

	<authentication-manager>
		<authentication-provider>
                        <!--<password-encoder hash="sha" />-->
			<jdbc-user-service data-source-ref="dataSource"
                            users-by-username-query="
                                select email, password, confirm from persons where email = ?
                            "
                            authorities-by-username-query="
                                select email, prole from persons where email = ?
                            "
                        />
		</authentication-provider>
	</authentication-manager>

</beans:beans>